(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
module.exports = (function() {
	'use strict';

	var config          = require('./config/router.js');
	var initServices    = require('./services/initServices.js');
	var initControllers = require('./controllers/initControllers.js');
	var initDirectives  = require('./directives/initDirectives.js');

	var webApp = angular.module('webApp', ['ui.router', 'angular-simple-chat', 'ngStorage', 'ngAudio'])
		.run(['$rootScope',  '$state', function ($rootScope, $state) {
   		$rootScope.$state = $state;
    }]);


	config(webApp);
	initServices(webApp);
	initControllers(webApp);
	initDirectives(webApp);
}());

},{"./config/router.js":2,"./controllers/initControllers.js":5,"./directives/initDirectives.js":6,"./services/initServices.js":8}],2:[function(require,module,exports){
module.exports = function(module) {
  "use strict";

module
.config(config);

function config($stateProvider, $urlRouterProvider) {
  $urlRouterProvider.otherwise('/login');
  $stateProvider
			.state('login', {
				url: '/login',
				templateUrl: '/assets/templates/login.html',
				controller: 'LoginPageController',
				controllerAs: 'vm'
			})
			.state('chat', {
				url: '/',
				templateUrl: '/assets/templates/chat.html',
				controller: 'ChatController',
				controllerAs: 'vm'
			})
		};
};

},{}],3:[function(require,module,exports){
module.exports = function(module) {
	'use strict';
	/**
	 * @ndoc controller
	 * @name webApp.controller:ChatController
	 *
	 * @description
	 * controller for chat page.
	 */
	module
	.controller('ChatController', ChatController)
	.service('MockMessagesService', MockMessagesService);
	 ChatController.$inject = ['$scope', '$interval', 'MockMessagesService', '$timeout', '$localStorage', '$sessionStorage']
   function ChatController($scope, $interval, MockMessagesService, $timeout, $localStorage, $sessionStorage) {
	  /**
 		 * @ngdoc property
 		 * @name vm
 		 *
 		 * @description
 		 * vm is an instance of the current controller.
		 	 */
 		var vm = this;
		vm.messageSound = messageSound;
		vm.options = {playlist: '../../sound/message.mp3'};
		vm.you = {
      userId: '4562KDJYE72930DST283DFY202Dd',
      userName: $localStorage.login,
			avatar: 'http://polyligne.be/wp-content/uploads/2014/06/Man_Avatar.gif',
    };

    vm.messages = MockMessagesService.getMessages();

    $scope.$on('simple-chat-message-posted', function() {
      console.log('onMessagePosted');
    });

		vm.random = function(min, max) {
    	return Math.floor(Math.random() * (max - min + 1)) + min
		};

		vm.sendMessage = function(message, username) {
	    if(message && message !== '' && username) {
	      vm.messages.push({
       		userName: username,
	        text: message
	      });
			};
			vm.messageSound();
			$timeout(function () {
				var message = angular.copy(vm.randomMessages[vm.random(0, 3)]);
				if(message.id < 5000) {
					message.id = vm.random(5001, 9459);
				} else if (message.id < 10000) {
					message.id = vm.random(0, 4999);
				}
				message.date = new Date;
				vm.messages.push(message);
			}, 1);
  	};

		function messageSound() {
	    var sound = document.createElement("AUDIO");
	    if (sound.canPlayType("audio/mpeg")) {
        sound.setAttribute("src",'./assets/sound/message.mp3');
				sound.play();
	    }
		}

		vm.randomMessages = [{
			  id: 1,
				text: 'How are u ?',
				userName: 'Jean',
				avatar: 'http://polyligne.be/wp-content/uploads/2014/06/Man_Avatar.gif',
			}, {
				id: 2,
				text: 'Sounds good',
				userName: 'Jean',
				avatar: 'http://polyligne.be/wp-content/uploads/2014/06/Man_Avatar.gif',
			}, {
				id: 3,
				text: 'lorem ispum dolum',
				userName: 'Jean',
				avatar: 'http://polyligne.be/wp-content/uploads/2014/06/Man_Avatar.gif',
			}, {
				id: 4,
				text: 'I have a sister, she\'s name Cally',
				userName: 'Jean',
				avatar: 'http://polyligne.be/wp-content/uploads/2014/06/Man_Avatar.gif',
			}]
		};
	}
		function MockMessagesService() {
	    this.getMessages = getMessages;

		  function getMessages() {
		    return [{
					id: 0,
					date: new Date,
		      text: 'Hello.',
		      userName: 'Jean',
		      avatar: 'http://polyligne.be/wp-content/uploads/2014/06/Man_Avatar.gif'
		    }]
			};
	  };

},{}],4:[function(require,module,exports){
module.exports = function(module) {
	'use strict';
	/**
	 * @ndoc controller
	 * @name webApp.controller:LoginPageController
	 *
	 * @description
	 * controller for main page.
	 */
	module
	.controller('LoginPageController', LoginPageController);
	 LoginPageController.$inject = ['$scope', '$interval', '$state', '$localStorage', '$sessionStorage'];
    function LoginPageController($scope, $interval, $state, $localStorage, $sessionStorage) {
		/**
 		 * @ngdoc property
 		 * @name vm
 		 *
 		 * @description
 		 * vm is an instance of the current controller.
		 	 */
 		var vm = this;
		vm.checkLogin = checkLogin;
		vm.checkIfLogin = checkIfLogin;
		vm.loginData = {};

		function checkIfLogin() {
			if ($localStorage.login) {
				$state.go("chat");
			}
		};

		vm.checkIfLogin();

		function checkLogin() {
			var login = vm.loginData.name;
			$localStorage.login = login;
			console.log($localStorage.login);
			$state.go("chat");
		}
	}
};

},{}],5:[function(require,module,exports){
module.exports = function(module) {
	require('./LoginPageController.js')(module);
	require('./ChatController.js')(module);
};

},{"./ChatController.js":3,"./LoginPageController.js":4}],6:[function(require,module,exports){
module.exports = function (module) {
	require('./nameValidation.js')(module);
}

},{"./nameValidation.js":7}],7:[function(require,module,exports){
module.exports = function (module) {
  'use strict';
  /**
   * @ndoc directive
   * @name webApp.directive:nameValidation
   * @require 'NgModel'
   * @restrict 'A'
   * @scope
   *
   * @description
   * This check validation for names
   */
  module
    .directive('fullName', function() {
      return {
          restrict: 'A',
          require: 'ngModel',
          link: function(scope, element, attrs, controller) {
            controller.$parsers.unshift(function(viewValue) {
              if(viewValue && viewValue.indexOf(' ') !== -1 && viewValue[viewValue.indexOf(' ') + 1]) {
                controller.$setValidity('fullname', true);
                return viewValue;
              } else {
                controller.$setValidity('fullname', false);
                return viewValue;
              }
            });
          }
        };
    });
};

},{}],8:[function(require,module,exports){
module.exports = function (module) {

}

},{}]},{},[1]);
